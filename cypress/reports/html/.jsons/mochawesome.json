{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2021-08-15T15:27:44.072Z",
    "end": "2021-08-15T15:35:35.401Z",
    "duration": 471329,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f1be361e-ee2b-48c7-9f7a-0203b0d40a21",
      "title": "",
      "fullFile": "cypress/integration/E2E.feature",
      "file": "cypress/integration/E2E.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "450ddf9a-5668-4520-a4c1-8c6ff8de4adb",
          "title": "Registration, Login, Update and Error Functionalities",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Validate User is able to Create a New Account With Valid Data",
              "fullTitle": "Registration, Login, Update and Error Functionalities Validate User is able to Create a New Account With Valid Data",
              "timedOut": null,
              "duration": 55932,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0c67c902-93d0-45e8-9ece-79cbad3cb55e",
              "parentUUID": "450ddf9a-5668-4520-a4c1-8c6ff8de4adb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate Registered User Can Login With Valid Credentials",
              "fullTitle": "Registration, Login, Update and Error Functionalities Validate Registered User Can Login With Valid Credentials",
              "timedOut": null,
              "duration": 45258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e1a914c1-6717-47f2-be79-a9df73e3c2dd",
              "parentUUID": "450ddf9a-5668-4520-a4c1-8c6ff8de4adb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate Registered User Can Update Address Details",
              "fullTitle": "Registration, Login, Update and Error Functionalities Validate Registered User Can Update Address Details",
              "timedOut": null,
              "duration": 100148,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "7fd4804f-c973-43f8-8f54-12f6ff6e2539",
              "parentUUID": "450ddf9a-5668-4520-a4c1-8c6ff8de4adb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate Your username and password do not match Try again Error Message is Displayed When Invalid Details is Used for Login",
              "fullTitle": "Registration, Login, Update and Error Functionalities Validate Your username and password do not match Try again Error Message is Displayed When Invalid Details is Used for Login",
              "timedOut": null,
              "duration": 43164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "939ff743-6be5-4225-a5f5-468f8d7ea167",
              "parentUUID": "450ddf9a-5668-4520-a4c1-8c6ff8de4adb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate Your username and password do not match Try again Error Message is Displayed When Invalid Details is Used for Login",
              "fullTitle": "Registration, Login, Update and Error Functionalities Validate Your username and password do not match Try again Error Message is Displayed When Invalid Details is Used for Login",
              "timedOut": null,
              "duration": 38556,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "950dc6a3-0e85-4f56-a44c-8023efebf903",
              "parentUUID": "450ddf9a-5668-4520-a4c1-8c6ff8de4adb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate Sorry, this is not a valid email address Error Message  is Displayed When Invalid E-Mail Address is Used for Login",
              "fullTitle": "Registration, Login, Update and Error Functionalities Validate Sorry, this is not a valid email address Error Message  is Displayed When Invalid E-Mail Address is Used for Login",
              "timedOut": null,
              "duration": 23043,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "1a0ff88f-ad1d-4e35-ba82-b5a3218e194b",
              "parentUUID": "450ddf9a-5668-4520-a4c1-8c6ff8de4adb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate Fill in the field Error Message is Displayed When No Password is Entered for Login",
              "fullTitle": "Registration, Login, Update and Error Functionalities Validate Fill in the field Error Message is Displayed When No Password is Entered for Login",
              "timedOut": null,
              "duration": 30626,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9d3fa668-392f-427f-8c3d-13b7a10bb23c",
              "parentUUID": "450ddf9a-5668-4520-a4c1-8c6ff8de4adb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate Fill in the field Error Message is Displayed When No EMail is Entered for Login",
              "fullTitle": "Registration, Login, Update and Error Functionalities Validate Fill in the field Error Message is Displayed When No EMail is Entered for Login",
              "timedOut": null,
              "duration": 32586,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "12991f10-c359-44bd-88b7-c4ed23024628",
              "parentUUID": "450ddf9a-5668-4520-a4c1-8c6ff8de4adb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate Your password must be between 5 and 20 characters long Error Messages is Displayed When Invalid Short Xters Password Is Used",
              "fullTitle": "Registration, Login, Update and Error Functionalities Validate Your password must be between 5 and 20 characters long Error Messages is Displayed When Invalid Short Xters Password Is Used",
              "timedOut": null,
              "duration": 41488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ebf8d5a3-4e3c-432e-86b0-f0bddcab20c2",
              "parentUUID": "450ddf9a-5668-4520-a4c1-8c6ff8de4adb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate Your password must be between 5 and 20 characters long Error Messages is Displayed When Invalid Long Xters Password Is Used",
              "fullTitle": "Registration, Login, Update and Error Functionalities Validate Your password must be between 5 and 20 characters long Error Messages is Displayed When Invalid Long Xters Password Is Used",
              "timedOut": null,
              "duration": 40302,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "f5ee836a-0cbb-4d22-b868-82797fc81d29",
              "parentUUID": "450ddf9a-5668-4520-a4c1-8c6ff8de4adb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0c67c902-93d0-45e8-9ece-79cbad3cb55e",
            "e1a914c1-6717-47f2-be79-a9df73e3c2dd",
            "7fd4804f-c973-43f8-8f54-12f6ff6e2539",
            "939ff743-6be5-4225-a5f5-468f8d7ea167",
            "950dc6a3-0e85-4f56-a44c-8023efebf903",
            "1a0ff88f-ad1d-4e35-ba82-b5a3218e194b",
            "9d3fa668-392f-427f-8c3d-13b7a10bb23c",
            "12991f10-c359-44bd-88b7-c4ed23024628",
            "ebf8d5a3-4e3c-432e-86b0-f0bddcab20c2",
            "f5ee836a-0cbb-4d22-b868-82797fc81d29"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 451103,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reporterEnabled": "mochawesome",
        "mochawesomeReporteOptions": {
          "reporterDir": "cypress/reports/mocha",
          "quite": true,
          "overwrite": true,
          "html": true,
          "json": true,
          "charts": true,
          "timestamp": "mmddyyyy-HHMMss"
        },
        "video": false,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "5.2.0"
    }
  }
}